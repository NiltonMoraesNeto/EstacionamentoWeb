@model ZTC.Model.Mensalista

@{
    ViewBag.Title = "Criar Novo Mensalista";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    #tableUsuario tr td {
        padding: 5px 5px 5px 5px;
    }

    .drop-down {
        height: 20px;
    }

    .error {
        color: #a94442;
    }
</style>

<script src="~/Content/jquery.searchabledropdown-1.0.8.src.js"></script>
@*<script src="//code.jquery.com/jquery-3.1.1.min.js"></script>*@
<script src="~/Content/jquery-3.1.1.min.js"></script>
<script type="text/javascript">

    $(document).ready(function () {

        function limpa_formulário_cep() {
            // Limpa valores do formulário de cep.
            $("#rua").val("");
            $("#bairro").val("");
            $("#cidade").val("");
            $("#uf").val("");
            $("#ibge").val("");
        }

        //Quando o campo cep perde o foco.
        $("#cep").blur(function () {

            //Nova variável "cep" somente com dígitos.
            var cep = $(this).val().replace(/\D/g, '');

            //Verifica se campo cep possui valor informado.
            if (cep != "") {

                //Expressão regular para validar o CEP.
                var validacep = /^[0-9]{8}$/;

                //Valida o formato do CEP.
                if (validacep.test(cep)) {

                    //Preenche os campos com "..." enquanto consulta webservice.
                    $("#rua").val("...");
                    $("#bairro").val("...");
                    $("#cidade").val("...");
                    $("#uf").val("...");
                    $("#ibge").val("...");

                    //Consulta o webservice viacep.com.br/
                    $.getJSON("//viacep.com.br/ws/" + cep + "/json/?callback=?", function (dados) {

                        if (!("erro" in dados)) {
                            //Atualiza os campos com os valores da consulta.
                            $("#rua").val(dados.logradouro);
                            $("#bairro").val(dados.bairro);
                            $("#cidade").val(dados.localidade);
                            $("#uf").val(dados.uf);
                            $("#ibge").val(dados.ibge);
                        } //end if.
                        else {
                            //CEP pesquisado não foi encontrado.
                            limpa_formulário_cep();
                            alert("CEP não encontrado.");
                        }
                    });
                } //end if.
                else {
                    //cep é inválido.
                    limpa_formulário_cep();
                    alert("Formato de CEP inválido.");
                }
            } //end if.
            else {
                //cep sem valor, limpa formulário.
                limpa_formulário_cep();
            }
        });
    });

</script>



<h2>Criar Novo Mensalista</h2>
<div class="content">

    @using (Html.BeginForm("Create", "Mensalista", FormMethod.Post, htmlAttributes: new { @id = "mensalista" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <table class="CadPro">
            <tr>
                <td>Nome usuário</td>
                <td>
                    @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "input-pdr", @style = "width:500px" } })
                    @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td>CPF</td>
                <td>
                    @Html.EditorFor(model => model.CPF, new { htmlAttributes = new { @class = "input-pdr cpf", @style = "width:240px" } })
                    @Html.ValidationMessageFor(model => model.CPF, "", new { @class = "text-danger" })
                </td>
                <td width="92px">Data de Nascimento</td>
                <td>
                    @Html.EditorFor(model => model.DataNascimento, new { htmlAttributes = new { @class = "input-pdr datetimepicker", @style = "width:240px" , @maxlength = "10" } })
                    @Html.ValidationMessageFor(model => model.DataNascimento, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td>Telefone Fixo</td>
                <td>
                    @Html.EditorFor(model => model.TelefoneFixo, new { htmlAttributes = new { @class = "input-pdr telefone", @style = "width:240px" } })
                    @Html.ValidationMessageFor(model => model.TelefoneFixo, "", new { @class = "text-danger" })
                </td>
                <td width="92px">Celular</td>
                <td>
                    @Html.EditorFor(model => model.TelefoneCelular, new { htmlAttributes = new { @class = "input-pdr telefone", @style = "width:240px" } })
                    @Html.ValidationMessageFor(model => model.TelefoneCelular, "", new { @class = "text-danger" })
                </td>
            </tr>


            <tr>
                <td colspan="4">
                    <input type="submit" value="Salvar" class="btn btnGreen" style="width: 85px; height: 34px; margin-left: 160px" />
                    <a href='@Url.Action("/", "Mensalista")'>
                        <input type="button" class="btn btnWhite dropdown-toggle" style="width: 85px; height: 34px;" value="Cancelar" />
                    </a>
                </td>
            </tr>
        </table>
        
       
    }

</div>


